<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Eric Yager</title>
    <link>https://ericyager.net/tags/python/</link>
    <description>Recent content in python on Eric Yager</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 21 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ericyager.net/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lattice Paths</title>
      <link>https://ericyager.net/project/lattice-paths/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ericyager.net/project/lattice-paths/</guid>
      
      <description>&lt;p&gt;During the Fall 2021, Spring 2022 school year, I worked on a research team studing the mathematical concept of &lt;em&gt;k&lt;/em&gt;-distinct &lt;a href=&#34;https://en.wikipedia.org/wiki/Lattice_path#North-East_lattice_paths&#34;&gt;lattice paths&lt;/a&gt;. Our research involved finding maximum cardinality sets of lattice paths on a paricular size lattice such that no path overlapped with another on &lt;em&gt;k&lt;/em&gt; or more edges. We will be publishing the results of our research in the near future.&lt;/p&gt;
&lt;p&gt;I led the programming effort on this project to develop code to test a greedy algorithm and a brute force algorithm for generating maximum sets of lattice paths. This was the first project I worked on for which I made extensive use of Go. I initially wrote most of the codebase in Python, but it was not fast enough for extended work on brute-force computation.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;The source code for this project is available on &lt;a href=&#34;https://github.com/ejyager00/lattice_paths&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;Our undergraduate research symposium presentation is available &lt;a href=&#34;https://scholar.valpo.edu/cus/1081/&#34;&gt;here&lt;/a&gt;. The presentation contains a basic summary of our results. We are currently working on publishing a full-length article in an undergraduate research journal.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Space Shooter</title>
      <link>https://ericyager.net/project/space-shooter/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ericyager.net/project/space-shooter/</guid>
      
      <description>&lt;p&gt;During the Fall 2020, Spring 2021 school year, Valparaiso University&amp;rsquo;s student chapter of the Association for Computing Machinery (of which I was vice president) worked on a team project to develop a video game. Ultimately, we decided to use Python and PyGame to make the project more accessible to members with little programming experience. We decided to make a space-themed endless third person shooter.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;The source code for this project is available on &lt;a href=&#34;https://github.com/valpo-acm/valpo-acm-game&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pictures&#34;&gt;Pictures&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;gameplay.gif&#34; alt=&#34;Space shooter gameplay.&#34;&gt;
&lt;br&gt;
Here is a simple demo of the gameplay in the game we created.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Ultimate Tic-Tac-Toe</title>
      <link>https://ericyager.net/project/ultimate-ttt/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ericyager.net/project/ultimate-ttt/</guid>
      
      <description>&lt;p&gt;During the Fall 2020, Spring 2021 school year, Valparaiso University&amp;rsquo;s math club (of which I was vice president) worked on research into the tic-tac-toe variant &lt;a href=&#34;https://en.wikipedia.org/wiki/Ultimate_tic-tac-toe&#34;&gt;ultimate-tic-tac-toe&lt;/a&gt;. I had already written a python program for basic command line gameplay, but I also wanted to write a faster implementation for potential deep learning research purposes. We did not end up with any super exciting results, but it was still a fun project to work on.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code&lt;/h2&gt;
&lt;p&gt;The source code for this project is available on &lt;a href=&#34;https://github.com/ejyager00/ultimatetictactoe&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python3 ultimatetictactoe.py
Player 1 name:   Eric
Player 2 name:   Player 2

It&amp;#39;s Eric&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You may go anywhere.
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (2,2)(1,1)

It&amp;#39;s Player 2&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (1, 1).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (1,1)(3,3)

It&amp;#39;s Eric&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (3, 3).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (3,3)(2,1)

It&amp;#39;s Player 2&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮X| |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (2, 1).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (2,1)(2,2)

It&amp;#39;s Eric&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| | ▮ | |
-+-+-▮-+-+-▮-+-+-
 |O| ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮X| |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (2, 2).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (2,2)(1,3)

It&amp;#39;s Player 2&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| |X▮ | |
-+-+-▮-+-+-▮-+-+-
 |O| ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮X| |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (1, 3).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (1,3)(2,2)

It&amp;#39;s Eric&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ |O|
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X| |X▮ | |
-+-+-▮-+-+-▮-+-+-
 |O| ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮X| |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
You must go in grid number (2, 2).
What move would you like to make?
(format moves like: (x,y)(x,y). The origin is the top left, so (1,1)(1,1) is the top left corner.
Your move:    (2,2)(1,2)

It&amp;#39;s Player 2&amp;#39;s turn!
The board looks like this:
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ |O|
-+-+-▮-+-+-▮-+-+-
 | |O▮ | | ▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮X|X|X▮ | |
-+-+-▮-+-+-▮-+-+-
 |O| ▮X|X|X▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮X|X|X▮ | |
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 | | ▮ | | ▮ | |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮X| |
-+-+-▮-+-+-▮-+-+-
 | | ▮ | | ▮ | |
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
  </channel>
</rss>
